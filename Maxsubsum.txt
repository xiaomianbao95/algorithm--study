//2019.3.11
package algorithmexec;

import java.util.Scanner;

/*
 * N个整数组成的序列a[1],a[2],a[3],…,a[n]，求该序列如a[i]+a[i+1]+…+a[j]的连续子段和的最大值。 
当所给的整数均为负数时和为0。 
例如：-2,11,-4,13,-5,-2，和最大的子段为：11,-4,13。和为20。

 */

public class Maxsubsum {

	@SuppressWarnings("resource")
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Scanner sca=new Scanner(System.in);
		int n=sca.nextInt();
		int[] array=new int [n];
		for(int i=0;i<n;i++) {
			array[i]=sca.nextInt();
		}
		int maxsum=array[0];
		int sum=0;
		for(int i=0;i<n;i++) {
			 sum+=array[i];
			if(sum>maxsum) {
				maxsum=sum;
			}
			if(sum<0)
				sum=0;
			
		}
		System.out.println(maxsum);
		
		

	}

}
